# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Celery

on:
  push:
    branches: [ 'master', '5.0' ]
    paths:
        - '**.py'
        - '**.txt'
        - '.github/workflows/python-package.yml'
  pull_request:
    branches: [ 'master', '5.0' ]
    paths:
        - '**.py'
        - '**.txt'
        - '.github/workflows/python-package.yml'

jobs:
  Unit:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10.0-beta.4', 'pypy-3.6', 'pypy-3.7']
        os: ["ubuntu-20.04", "windows-2019"]
        exclude:
          - os: windows-2019
            python-version: 'pypy-3.7'
          - os: windows-2019
            python-version: 'pypy-3.6'
          - os: windows-2019
            python-version: "3.10.0-beta.4"
    continue-on-error: ${{ startsWith(matrix.python-version, '3.10.0-beta.') }}

    steps:
    - name: Install apt packages
      if: startsWith(matrix.os, 'ubuntu-')
      run: |
        sudo apt update && sudo apt-get install -f libcurl4-openssl-dev libssl-dev gnutls-dev httping expect libmemcached-dev
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"
    - name: Cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key:
          ${{ matrix.python-version }}-${{matrix.os}}-${{ hashFiles('**/setup.py') }}
        restore-keys: |
          ${{ matrix.python-version }}-${{matrix.os}}

    - name: Install tox
      run: python -m pip install tox tox-gh-actions
    - name: >
        Run tox for
        "${{ matrix.python-version }}-unit"
      timeout-minutes: 15
      run: >
        tox --verbose --verbose

    - uses: codecov/codecov-action@v1
      with:
        flags: unittests # optional
        fail_ci_if_error: true # optional (default = false)
        verbose: true # optional (default = false)

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      # Must match the Python version in tox.ini for flake8
      with: { python-version: 3.9 }
    - name: Install tox
      run: python -m pip install tox
    - name: Lint with pre-commit
      run: tox --verbose -e lint


  Integration:

    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9', 'pypy3']

     # additional service containers to run
    services:
      # postgres service
      rabbitmq:
        # docker hub image
        image: rabbitmq
        # configure the instance
        env:
          RABBITMQ_DEFAULT_USER: craiga
          RABBITMQ_DEFAULT_PASS: security_is_important
        ports:
          - 5432:5432

      # redis service
      redis:
        # Docker Hub image
        image: redis
        ports:
        - 6379:6379
        # configure the instance
        env:
        # The hostname used to communicate with the Redis service container
          REDIS_HOST: localhost
          # The default Redis port
          REDIS_PORT: 6379

    steps:
    - name: Install apt packages
      run: |
        sudo apt-get install -f libcurl4-openssl-dev libssl-dev gnutls-dev httping expect libmemcached-dev
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"
    - name: Cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key:
          ${{ matrix.python-version }}-v1-${{ hashFiles('**/setup.py') }}
        restore-keys: |
          ${{ matrix.python-version }}-v1-
    - name: Install dependencies
      run: |
        python -m pip install -r requirements/dev.txt \
            -r requirements/test.txt \
            -r requirements/test-ci-default.txt \
            -r requirements/test-integration.txt

    - name: Run Integration test with pytest / tox /tox-docker
      run: |
        PYTHONPATH=. pytest -xsv t/integration
